"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const path=require("path"),fs=require("fs"),fse=require("fs-extra"),anymatch=require("anymatch"),micromatch=require("micromatch"),utils_1=require("../utils"),iconv=require("iconv-lite"),MAX_ARGS_LIMIT=65535,CACHE_FILE_NAME="fileCache.cfg",CUR_CACHE_VERSION=1;class FileCacheUtils{constructor(t,e,i){if(this.cacheVersion=1,this.folderInfo={},this.fileList=[],this.folderList=[],this.ignoreds=[],this.matchers=null,this.projectPath=t,this.cacheDirPath=e||"",this.logger=i,!t)throw new Error("init FileCacheutils error for not projectPath");this._cacheStorePath=e?path.posix.join(e,"fileCache.cfg"):"",this.initState(),this.logger.debug("init FileCacheutils",this._cacheStorePath)}get cacheStorePath(){return this._cacheStorePath}initState(){this.folderInfo={},this.fileList=[],this.folderList=[],this.ignoreds=[],this.matchers=null}writeCache(t){try{if(!this.cacheStorePath)return;if(!t||!t.folderInfo)return void this.logger.warn("dircache.writeCache fail for not cache");t.cacheVersion=t.cacheVersion||this.cacheVersion;const e=Buffer.from(JSON.stringify(t)).toString(),i=iconv.encode(e,"utf8").toString();if(fse.pathExistsSync(this.cacheDirPath)){const t=fse.lstatSync(this.cacheDirPath);t.isDirectory()||fse.removeSync(this.cacheDirPath)}fse.outputFileSync(this.cacheStorePath,i,"utf8"),this.logger.warn("dircache.writeCache succ",this.cacheStorePath)}catch(t){this.logger.error(`dircache writeCache: ${this.cacheStorePath} Error: `,t)}}deleteCache(){this.isCacheExists()&&fse.removeSync(this.cacheStorePath)}isCacheExists(){return!!this._cacheStorePath&&fse.pathExistsSync(this.cacheStorePath)}_fastConcat(t,e){return e.length>65535?t.concat(e):(t.push(...e),t)}_updateCache(t,e){let i=path.posix.relative(this.projectPath,t);i?i.endsWith("/")||(i+="/"):i="./";const s=[],h=[],r={};if(this.folderInfo[i]){const t=this.folderInfo[i].children;for(let e=0,i=t.length;e<i;e++){r[t[e]]=!0}}const o=fse.readdirSync(t);for(let e=0,c=o.length;e<c;e++){const c=o[e],a=path.posix.join(t,c),n=path.posix.join(i,c);if(r[n])h.push(n);else if(!this.folderInfo[n+path.posix.sep]&&!micromatch.any(n,this.ignoreds)){const t=fse.lstatSync(a);t.isFile()?h.push(n):this.folderInfo[n]||this.folderInfo[n+path.posix.sep]||s.push({searchItem:n,stat:t})}}this.folderInfo[i]={mtimeMs:e.mtimeMs,children:h};for(let t=0,e=s.length;t<e;t++){let{searchItem:e}=s[t];const{stat:i}=s[t],h=utils_1.ensureWindowsStylePath(path.posix.join(this.projectPath,e),this.projectPath,!0);e.endsWith(path.posix.sep)||(e+=path.posix.sep),this.folderInfo[e]||this._updateCache(h,i)}this.fileList=this._fastConcat(this.fileList,h)}_getEmptyFolderInfo(){return{"./":{mtimeMs:-1,children:[]}}}getCompleteList(t,e){if(this.logger.warn("fileCacheUtils.getCompleteList"),!t)return this.logger.error("fileCacheUtils.getCompleteList: failed for noCache"),null;let i=Date.now();this.fileList=[],this.ignoreds=e||[],this.matchers=anymatch(this.ignoreds),this.folderInfo=t.folderInfo||{},this.folderList=Object.keys(this.folderInfo),0!==this.folderList.length&&this.folderInfo["./"]||(this.folderInfo=this._getEmptyFolderInfo(),this.folderList=Object.keys(this.folderInfo));for(let t=0,e=this.folderList.length;t<e;t++){const e=this.folderList[t],i=utils_1.ensureWindowsStylePath(path.posix.join(this.projectPath,e),this.projectPath,!0);if(fse.pathExistsSync(i)){const t=fse.lstatSync(i),s=this.folderInfo[e];t.mtimeMs===s.mtimeMs?this.fileList=this._fastConcat(this.fileList,this.folderInfo[e].children):this._updateCache(i,t)}else{if(i===`${this.projectPath}/`||i===this.projectPath)continue;delete this.folderInfo[e]}}this.logger.warn("dircache.getCompleteList: updateCache cost ",Date.now()-i),i=Date.now(),this.folderList=Object.keys(this.folderInfo);let s=this._fastConcat([],this.fileList);return s=this._fastConcat(s,this.folderList),this.logger.warn("dircache.getCompleteList: concatTime cost ",Date.now()-i),this.writeCache({ignoreds:this.ignoreds,folderInfo:this.folderInfo,cacheVersion:this.cacheVersion}),{fileList:this.fileList,completeFileList:s}}_isSameCacheVersion(t){return!!t&&t.cacheVersion===this.cacheVersion}_isSameIgnores(t=[],e=[]){const i=new Set(t),s=new Set(e);if(i.size!==s.size)return!1;for(const t of i)if(!s.has(t))return!1;return!0}getCache(t){try{const e=fs.readFileSync(this.cacheStorePath),i=iconv.decode(e,"utf8").toString(),s=JSON.parse(i);return s&&s.folderInfo&&(this._isSameCacheVersion(s)&&this._isSameIgnores(s.ignoreds,t))?(s.ignoreds=t||[],s):null}catch(t){return this.logger.error("dircache.getCache error:",t),null}}}exports.FileCacheUtils=FileCacheUtils;